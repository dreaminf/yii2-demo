<?php

namespace frontend\controllers;

use Yii;
use frontend\models\card\Cardinfo;
use frontend\models\card\SearchCard;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use dosamigos\qrcode\QrCode;
use yii\web\Response;

/**
 * CardController implements the CRUD actions for Cardinfo model.
 */
class CardController extends Controller
{
    /**
     * @inheritdoc
     */
//    public $enableCsrfValidation=false;
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Cardinfo models.
     * @return mixed
     */
    public function actions()
    {
        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $searchModel = new SearchCard();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Cardinfo model.
     * @param string $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Cardinfo model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Cardinfo();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->rand_code]);
        }

        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing Cardinfo model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->rand_code]);
        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing Cardinfo model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Cardinfo model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return Cardinfo the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Cardinfo::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
    public function actionCreatecode(){
        $rand_code=md5(Yii::$app->security->generateRandomString());
        $path="statics/images/".time().",png";
        QrCode::png($rand_code,$path,3,8,1);
//        var_dump($rand_code);
       return $this->render("qrcode",[
            "img_path"=>$path,
            "rand_code"=>$rand_code
        ]);
    }
    public function actionScan(){
        if(Yii::$app->request->isAjax){
            $data=Yii::$app->request->get("code");
            Yii::$app->response->format=Response::FORMAT_JSON;
            $model=[
                "code"=>200,
                "msg"=>"success",
                "data"=>$data
            ];
            return $model;
        }
    }
}
